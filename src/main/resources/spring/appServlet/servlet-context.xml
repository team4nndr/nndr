<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
		

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- @RequestMapping, @GetMapping, @PostMapping을 활성화해서 HanlderMapping 대체 -->
	<annotation-driven />

	<!-- webapp/resource 폴더를 GET방식 -->
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- websocket handler -->
	
	<beans:bean id="AlarmWebsocketHandler" class="edu.kh.nndr.alarm.websocket.AlarmWebsocketHandler"/>
	<websocket:handlers>
		<!-- websocket 매핑 주소 -->
		<websocket:mapping handler="AlarmWebsocketHandler" path="/alarmSock"/>
		
		<websocket:handshake-interceptors> 
			<!-- interceptor : http통신에서 request, response를 가로채는 역할
			handshake-interceptors :Httpsession에 있는 값을 가로채서 WebSocketSession 넣어주는 역할  -->
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
		</websocket:handshake-interceptors>
		
		<websocket:sockjs/>
	</websocket:handlers> 

	
	
	
	<!-- component-scan : @Component와 자식 어노테이션을 Bean으로 등록하는 태그 -->
	<!-- base-package 이하에 작성된 @Component와 자식 어노테이션(@Controller, @Service, @Repository)이 붙은 클래스를 찾아 Bean 으로 등록 -->
	<!-- Bean : Spring이 만들고 관리하는 객체 -->
	<context:component-scan base-package="edu.kh.nndr" />
	
</beans:beans>

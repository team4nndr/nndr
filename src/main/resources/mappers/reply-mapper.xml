<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="replyMapper">

	<resultMap type="Reply" id="reply_rm">
		<!-- DB의 기본 키(복합키면 여러 개 작성) -->
		<id property="replyNo" column="REPLY_NO" />

		<!-- DB의 일반 컬럼들 -->
		<result property="replyContent" column="REPLY_CONTENT" />
		<result property="replyDate" column="REPLY_DATE" />
		<result property="replyDelete" column="REPLY_DELETE" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="boardNo" column="BOARD_NO" />
		<result property="parentReplyNo" column="PARENT_REPLY_NO" />
		
		<!-- join Member with memberNo -->
		<result property="memberName" column="MEMBER_NAME" />
		<result property="setFriendReq" column="SET_FRIEND_REQ" />
		<result property="setAlarmReply" column="SET_AL_REPLY" />
		<result property="setAlarmLike" column="SET_AL_LIKE" />
		<result property="setAlarmTag" column="SET_AL_TAG" />
		<result property="setAlarmReqAccept" column="SET_AL_REQ_ACCEPT" />
		
		<!-- join MemberInfo with memberNo -->		
		<result property="profileImage" column="INFO_IMG" />
	</resultMap>
	
	<insert id="submit">
		<selectKey order="BEFORE" resultType="_int" keyProperty="replyNo">
			SELECT SEQ_REPLY_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO "REPLY" VALUES (
			${replyNo},
			#{replyContent},
			SYSDATE,
			DEFAULT,
			${memberNo},
			${boardNo},
			<if test="parentReplyNo == 0">NULL</if>		
			<if test="parentReplyNo != 0">#{parentReplyNo}</if>
		)
	</insert>

	<select id="replyList" resultMap="reply_rm">
		SELECT LEVEL, C.*
		FROM (
			SELECT REPLY_NO, REPLY_CONTENT, REPLY_DELETE, MEMBER_NO, BOARD_NO, PARENT_REPLY_NO,
				<![CDATA[
				CASE  
					WHEN SYSDATE - REPLY_DATE < 1/24/60
					THEN FLOOR( (SYSDATE - REPLY_DATE) * 24 * 60 * 60 ) || '초 전'
					WHEN SYSDATE - REPLY_DATE < 1/24
					THEN FLOOR( (SYSDATE - REPLY_DATE) * 24 * 60) || '분 전'
					WHEN SYSDATE - REPLY_DATE < 1
					THEN FLOOR( (SYSDATE - REPLY_DATE) * 24) || '시간 전'
					ELSE TO_CHAR(REPLY_DATE, 'YYYY-MM-DD')
				END REPLY_DATE,
				MEMBER_NAME, SET_FRIEND_REQ, SET_AL_REPLY, SET_AL_LIKE, SET_AL_TAG, SET_AL_REQ_ACCEPT, INFO_IMG
				]]>
			FROM "REPLY" JOIN "MEMBER" USING(MEMBER_NO) JOIN "MEMBER_INFO" USING(MEMBER_NO)
			) C
		WHERE BOARD_NO = ${boardNo} AND REPLY_DELETE = 'N'
		START WITH PARENT_REPLY_NO IS NULL
		CONNECT BY PRIOR REPLY_NO = PARENT_REPLY_NO
		ORDER SIBLINGS BY REPLY_NO
	</select>
	
	<!-- boardNo 게시글 삭제 시 해당 게시글의 댓글 모두 삭제 -->
	<delete id="deleteReplyAll">
		UPDATE "REPLY"
		SET		REPLY_DELETE = 'Y'
		WHERE 	BOARD_NO = ${boardNo}
	</delete>
	
	<!-- 댓글 삭제 -->
	<delete id="deleteReply">
		UPDATE "REPLY"
		SET		REPLY_DELETE = 'Y'
		WHERE 	REPLY_NO = ${replyNo}
	</delete>
</mapper>

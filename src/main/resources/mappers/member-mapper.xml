<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

	<resultMap type="Member" id="member_rm">
		<!-- DB의 기본 키(복합키면 여러 개 작성) -->
		<id property="memberNo" column="MEMBER_NO" />

		<!-- DB의 일반 컬럼들 -->
		<result property="memberEmail" column="MEMBER_EMAIL" />
		<result property="memberPw" column="MEMBER_PW" />
		<result property="memberName" column="MEMBER_NAME" />
		<result property="memberTel" column="MEMBER_TEL" />
		<result property="memberBirth" column="MEMBER_BIRTH" />
		<result property="memberGen" column="MEMBER_GEN" />
		<result property="memberCode" column="MEMBER_CODE" />
		<result property="enrollDate" column="ENROLL_DATE" />
		<result property="disableDate" column="DISABLE_DATE" />
		<result property="deleteDate" column="DELETE_DATE" />
		<result property="setFriendReq" column="SET_FRIEND_REQ" />
		<result property="setFeedAuthority" column="SET_FEED_AUTH" />
		<result property="setAlarmFriendReq" column="SET_AL_FRIEND_REQ" />
		<result property="setAlarmReqAccept" column="SET_AL_REQ_ACCEPT" />
		<result property="setAlarmTag" column="SET_AL_TAG" />
		<result property="setAlarmReply" column="SET_AL_REPLY" />
		<result property="setAlarmLike" column="SET_AL_LIKE" />
		<result property="setAlarmShare" column="SET_AL_SHARE" />
		<result property="setAlarmFeed" column="SET_AL_FEED" />
		
		<!-- join MemberInfo -->
		<result property="profileImage" column="INFO_IMG" />
		<result property="infoGender" column="INFO_GENDER" />
		<result property="infoResidence" column="INFO_RESIDENCE" />		
	</resultMap>
	
	<!-- 로그인(임시) -->
	<select id="login" resultMap="member_rm">
		SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_NAME, MEMBER_TEL, MEMBER_CODE, 
			TO_CHAR(DISABLE_DATE, 'YYYY-MM-DD HH24:MI:SS') DISABLE_DATE, 
			TO_CHAR(DELETE_DATE, 'YYYY-MM-DD HH24:MI:SS') DELETE_DATE,
			TO_CHAR(ENROLL_DATE, 'YYYY-MM-DD HH24:MI:SS') ENROLL_DATE,
			SET_FRIEND_REQ, SET_FEED_AUTH, SET_AL_FRIEND_REQ, SET_AL_REQ_ACCEPT, SET_AL_TAG, 
			SET_AL_REPLY, SET_AL_LIKE, SET_AL_SHARE, SET_AL_FEED,
			INFO_PROFILEPATH||INFO_PROFILE INFO_IMG, INFO_GENDER, INFO_RESIDENCE
		FROM "MEMBER"
			  LEFT JOIN "MEMBER_INFO" USING(MEMBER_NO)
	    WHERE MEMBER_EMAIL = #{memberEmail} AND MEMBER_PW = #{memberPw}
	          AND MEMBER_CODE != 'B' AND MEMBER_CODE != 'D'
	</select>
	
	<!-- 유저 수 조회 -->
	<select id="getMemberCount" resultType="_int">
		SELECT COUNT(*) FROM "MEMBER" WHERE MEMBER_CODE != 'A'
	</select>
	
	<!-- 모든(비활성, 탈퇴유저 포함 / 관리자 제외) 유저 목록 조회 -->
	<select id="selectMemberList" resultMap="member_rm">
		SELECT MEMBER_NO, MEMBER_NAME, MEMBER_EMAIL, MEMBER_CODE,
			TO_CHAR(ENROLL_DATE, 'YYYY-MM-DD') ENROLL_DATE, INFO_PROFILEPATH||INFO_PROFILE INFO_IMG
		FROM "MEMBER"
			  LEFT JOIN "MEMBER_INFO" USING(MEMBER_NO)
		WHERE MEMBER_CODE != 'A'
		ORDER BY MEMBER_NO DESC
	</select>
	
	<!-- 유저 정보 조회 -->
	<select id="selectMember" resultMap="member_rm">
		SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_NAME, MEMBER_TEL, MEMBER_CODE, 
			TO_CHAR(DISABLE_DATE, 'YYYY-MM-DD HH24:MI:SS') DISABLE_DATE, 
			TO_CHAR(DELETE_DATE, 'YYYY-MM-DD HH24:MI:SS') DELETE_DATE,
			TO_CHAR(ENROLL_DATE, 'YYYY-MM-DD') ENROLL_DATE,
			SET_FRIEND_REQ, SET_FEED_AUTH, SET_AL_FRIEND_REQ, SET_AL_REQ_ACCEPT, SET_AL_TAG,
			SET_AL_REPLY, SET_AL_LIKE, SET_AL_SHARE, SET_AL_FEED,
			INFO_PROFILEPATH||INFO_PROFILE INFO_IMG, INFO_GENDER, INFO_RESIDENCE
		FROM "MEMBER"
			  LEFT JOIN "MEMBER_INFO" USING(MEMBER_NO)
	    WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 유저 비활성화 -->
	<update id="disableMember">
		UPDATE "MEMBER"
		SET		MEMBER_CODE = 'B',
				DISABLE_DATE = SYSDATE
		WHERE	MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 계정 정상화 (비활성 해제, 탈퇴 유저 복구) -->
	<update id="enableMember">
		UPDATE "MEMBER"
		SET		MEMBER_CODE = 'N'
		WHERE	MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 계정 삭제 -->
	<update id="deleteMember">
		UPDATE "MEMBER"
		SET		MEMBER_CODE = 'D',
				DELETE_DATE = SYSDATE
		WHERE	MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 회원정보 수정(설정 페이지) : MEMBER 테이블 -->
	<update id="changeMemberInfoAtMember">
		UPDATE "MEMBER"
		SET		MEMBER_TEL = #{memberTel}
		WHERE	MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 회원정보 수정(설정 페이지) : MEMBER_INFO 테이블 -->
	<update id="changeMemberInfoAtMemberInfo">
		UPDATE "MEMBER_INFO"
		SET		INFO_GENDER = #{infoGender},
				INFO_RESIDENCE = #{infoResidence}
		WHERE	MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 회원 비밀번호 수정 -->
	<update id="changeMemberPasswd">
		UPDATE "MEMBER"
		SET		MEMBER_PW = #{memberPw}
		WHERE	MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 현재 비밀번호 조회 -->
	<select id="checkPasswd" resultType="string">
		SELECT 	MEMBER_PW
		FROM   "MEMBER"
		WHERE 	MEMBER_NO = #{memberNo}
	</select>
		
	<!-- 회원 가입 -->
	<insert id="signUp" useGeneratedKeys="true">
	
		<selectKey order="BEFORE" resultType="_int" keyProperty="memberNo">
			SELECT SEQ_MEMBER_NO.NEXTVAL FROM DUAL
		</selectKey>
	
		INSERT INTO "MEMBER"
		VALUES(#{memberNo}    
		, #{memberEmail}
		, #{memberPw}
		, #{memberName}
		, #{memberTel}
		,DEFAULT, SYSDATE,NULL, NULL,DEFAULT,DEFAULT,DEFAULT
		,DEFAULT,DEFAULT,DEFAULT,DEFAULT,DEFAULT,DEFAULT)
	</insert>	
	
	<!-- 회원 가입 추가 -->
	<insert id="signUpPlus">
		INSERT INTO	"MEMBER_INFO"(MEMBER_NO,INFO_GENDER,INFO_BIRTH)
		VALUES (#{memberNo}, #{infoGender},#{infoBirth})
	</insert>

	<!-- 검색 유저 수 조회 -->
	<select id="getMemberSearchCount" resultType="_int">
		SELECT 	 COUNT(*)
		FROM 	"MEMBER"
		WHERE	 MEMBER_CODE != 'A'
		<if test="query != null">
				 AND (MEMBER_EMAIL LIKE '%${query}%'
			     OR MEMBER_NAME LIKE '%${query}%')
        </if>
	    <choose>
        	<when test='op == "정상"'>
	        	AND MEMBER_CODE='N'
        	</when>
        	<when test='op == "비활성화"'>
	        	AND MEMBER_CODE='B'
        	</when>
        	<when test='op == "탈퇴"'>
	        	AND MEMBER_CODE='D'
        	</when>
        </choose>
	</select>
	
	<!-- 검색 유저 목록 조회 -->
	<select id="selectMemberSearchList" resultMap="member_rm">
		SELECT MEMBER_NO, MEMBER_NAME, MEMBER_EMAIL, MEMBER_CODE, MEMBER_TEL, 
			TO_CHAR(DISABLE_DATE, 'YYYY-MM-DD HH24:MI:SS') DISABLE_DATE, 
			TO_CHAR(DELETE_DATE, 'YYYY-MM-DD HH24:MI:SS') DELETE_DATE,
			TO_CHAR(ENROLL_DATE, 'YYYY-MM-DD HH24:MI:SS') ENROLL_DATE, INFO_PROFILEPATH||INFO_PROFILE INFO_IMG
		FROM "MEMBER"
			  LEFT JOIN "MEMBER_INFO" USING(MEMBER_NO)
		WHERE MEMBER_CODE != 'A'
		<if test="query != null">
				 AND (MEMBER_EMAIL LIKE '%${query}%'
			     OR MEMBER_NAME LIKE '%${query}%')
        </if>
	    <choose>
        	<when test='op == "정상"'>
	        	AND MEMBER_CODE='N'
        	</when>
        	<when test='op == "비활성화"'>
	        	AND MEMBER_CODE='B'
        	</when>
        	<when test='op == "탈퇴"'>
	        	AND MEMBER_CODE='D'
        	</when>
        </choose>
		ORDER BY MEMBER_NO DESC
	</select>
	
	<!-- 환경설정 세팅값 변경 -->
	<update id="changeSetting">
		UPDATE	"MEMBER"
		SET		 ${key} = #{value}
		WHERE 	 MEMBER_NO = #{memberNo}
	</update>
	
</mapper>

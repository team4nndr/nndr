
DROP TABLE "MEMBER_INFO";

CREATE TABLE "MEMBER_INFO" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"INFO_INTRO"	VARCHAR2(300)		NULL,
	"INFO_HOBBY"	VARCHAR2(30)		NULL,
	"INFO_GENDER"	VARCHAR2(30)		NULL,
	"INFO_BIRTH"	DATE		NULL,
	"INFO_IMG"	VARCHAR2(300)		NULL,
	"INFO_JOB"	VARCHAR2(60)		NULL,
	"INFO_COLLEGE"	VARCHAR2(60)		NULL,
	"INFO_HIGH"	VARCHAR2(60)		NULL,
	"INFO_MIDDLE"	VARCHAR2(60)		NULL,
	"INFO_ELEMENTARY"	VARCHAR2(60)		NULL,
	"INFO_RESIDENCE"	VARCHAR2(60)		NULL,
	"INFO_BIRTHPLACE"	VARCHAR2(60)		NULL,
	"INFO_TEL"	NUMBER		NULL,
	"INFO_SNS"	VARCHAR2(150)		NULL,
	"INFO_LANG"	VARCHAR2(60)		NULL,
	"ROMANTIC_YN"	VARCHAR2(60)	DEFAULT 'N'	NULL,
	"INFO_NICK"	VARCHAR2(60)		NULL,
	"INFO_TEXT"	VARCHAR2(300)		NULL,
	"INFO_BACK"	VARCHAR2(300)	DEFAULT '기본값'	NOT NULL,
	"INFO_PROFILE"	VARCHAR2(300)	DEFAULT '기본값'	NOT NULL
);

COMMENT ON COLUMN "MEMBER_INFO"."MEMBER_NO" IS '회원번호(SEQ_MEMBER_NO)';

COMMENT ON COLUMN "MEMBER_INFO"."INFO_INTRO" IS '소개';

COMMENT ON COLUMN "MEMBER_INFO"."INFO_HOBBY" IS '취미';

COMMENT ON COLUMN "MEMBER_INFO"."INFO_GENDER" IS '성별("남", "여", "없음")';

COMMENT ON COLUMN "MEMBER_INFO"."INFO_BIRTH" IS '생일';

COMMENT ON COLUMN "MEMBER_INFO"."INFO_IMG" IS '정보 이미지 경로';

COMMENT ON COLUMN "MEMBER_INFO"."INFO_JOB" IS '직장';

COMMENT ON COLUMN "MEMBER_INFO"."INFO_COLLEGE" IS '대학교';

COMMENT ON COLUMN "MEMBER_INFO"."INFO_HIGH" IS '고등학교';

COMMENT ON COLUMN "MEMBER_INFO"."INFO_MIDDLE" IS '중학교';

COMMENT ON COLUMN "MEMBER_INFO"."INFO_ELEMENTARY" IS '초등학교';

COMMENT ON COLUMN "MEMBER_INFO"."INFO_RESIDENCE" IS '현재 거주지';

COMMENT ON COLUMN "MEMBER_INFO"."INFO_BIRTHPLACE" IS '출생지';

COMMENT ON COLUMN "MEMBER_INFO"."INFO_TEL" IS '전화번호';

COMMENT ON COLUMN "MEMBER_INFO"."INFO_SNS" IS '소셜 링크';

COMMENT ON COLUMN "MEMBER_INFO"."INFO_LANG" IS '언어';

COMMENT ON COLUMN "MEMBER_INFO"."ROMANTIC_YN" IS '연애/결혼상태("Y", "N")';

COMMENT ON COLUMN "MEMBER_INFO"."INFO_NICK" IS '별명';

COMMENT ON COLUMN "MEMBER_INFO"."INFO_TEXT" IS '좋아하는문구';

COMMENT ON COLUMN "MEMBER_INFO"."INFO_BACK" IS '개인피드 배경';

COMMENT ON COLUMN "MEMBER_INFO"."INFO_PROFILE" IS '개인피드 프로필';

ALTER TABLE "MEMBER_INFO" ADD CONSTRAINT "PK_MEMBER_INFO" PRIMARY KEY (
	"MEMBER_NO"
);

ALTER TABLE "MEMBER_INFO" ADD CONSTRAINT "FK_MEMBER_TO_MEMBER_INFO" FOREIGN KEY (
	"MEMBER_NO") REFERENCES "MEMBER" ("MEMBER_NO");

SELECT * FROM MEMBER_INFO;


ALTER TABLE "MEMBER_INFO" ADD CONSTRAINT "FK_MEMBER_TO_MEMBER_INFO_1" FOREIGN KEY (
	"MEMBER_NO" ) REFERENCES "MEMBER" ("MEMBER_NO");


----------------------------------------------------------------------------

CREATE TABLE "MEMBER_HOBBY" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"HOBBY_YN"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"HOBBY_KIND"	VARCHAR2(60)		NULL
);

COMMENT ON COLUMN "MEMBER_HOBBY"."MEMBER_NO" IS '회원번호(SEQ_MEMBER_NO)';

COMMENT ON COLUMN "MEMBER_HOBBY"."HOBBY_YN" IS '취미 상태("Y", "N")';

COMMENT ON COLUMN "MEMBER_HOBBY"."HOBBY_KIND" IS '취미 종류';

ALTER TABLE "MEMBER_HOBBY" ADD CONSTRAINT "PK_MEMBER_HOBBY" PRIMARY KEY (
	"MEMBER_NO"
);

ALTER TABLE "MEMBER_HOBBY" ADD CONSTRAINT "FK_MEMBER_INFO_TO_MEMBER_HOBBY_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER_INFO" (
	"MEMBER_NO"
);

----------------------------------------------------------------------------


DROP TABLE "MEMBER_EVENT";

CREATE TABLE "MEMBER_EVENT" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"EVENT_DATE"	DATE		NOT NULL,
	"EVENT_CONTENT"	VARCHAR2(300)		NOT NULL,
	"EVENT_PAST"	CHAR(1)	DEFAULT 'N'	NOT NULL
);

COMMENT ON COLUMN "MEMBER_EVENT"."MEMBER_NO" IS '회원번호(SEQ_MEMBER_NO)';

COMMENT ON COLUMN "MEMBER_EVENT"."EVENT_DATE" IS '이벤트 날짜';

COMMENT ON COLUMN "MEMBER_EVENT"."EVENT_CONTENT" IS '이벤트 내용';

COMMENT ON COLUMN "MEMBER_EVENT"."EVENT_PAST" IS '지나간 이벤트("Y", "N")';

ALTER TABLE "MEMBER_EVENT" ADD CONSTRAINT "PK_MEMBER_EVENT" PRIMARY KEY (
	"MEMBER_NO"
);

ALTER TABLE "MEMBER_EVENT" ADD CONSTRAINT "FK_MEMBER_INFO_TO_MEMBER_EVENT_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER_INFO" (
	"MEMBER_NO"
);

--------------------------------------------------------------------------------------

CREATE TABLE "MEMBER_FAMIILY" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"FAM_MEMBER_NO"	NUMBER		NOT NULL,
	"FAM_ER"	VARCHAR2(30)		NOT NULL
);

COMMENT ON COLUMN "MEMBER_FAMIILY"."MEMBER_NO" IS '회원번호(SEQ_MEMBER_NO)';

COMMENT ON COLUMN "MEMBER_FAMIILY"."FAM_MEMBER_NO" IS '가족회원번호';

COMMENT ON COLUMN "MEMBER_FAMIILY"."FAM_ER" IS '가족 관계';

ALTER TABLE "MEMBER_FAMIILY" ADD CONSTRAINT "PK_MEMBER_FAMIILY" PRIMARY KEY (
	"MEMBER_NO"
);

ALTER TABLE "MEMBER_FAMIILY" ADD CONSTRAINT "FK_MEMBER_INFO_TO_MEMBER_FAMIILY_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER_INFO" (
	"MEMBER_NO"
);

-------------------------------------------------------------------------------------

DROP TABLE "MEMBER_ROMANTIC";

CREATE TABLE "MEMBER_ROMANTIC" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"ROMANTIC_YN"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"ROMANTIC_MD"	CHAR(1)		NOT NULL,
	"ROMANTIC_SOMEONE"	NUMBER		NULL,
	"ROMANTIC_DATE"	DATE		NOT NULL
);

COMMENT ON COLUMN "MEMBER_ROMANTIC"."MEMBER_NO" IS '회원번호(SEQ_MEMBER_NO)';

COMMENT ON COLUMN "MEMBER_ROMANTIC"."ROMANTIC_YN" IS '연애/결혼상태("Y", "N")';

COMMENT ON COLUMN "MEMBER_ROMANTIC"."ROMANTIC_MD" IS '연애/결혼("M", "D")';

COMMENT ON COLUMN "MEMBER_ROMANTIC"."ROMANTIC_SOMEONE" IS '상대방 회원번호';

COMMENT ON COLUMN "MEMBER_ROMANTIC"."ROMANTIC_DATE" IS '연애/결혼 시작일';

ALTER TABLE "MEMBER_ROMANTIC" ADD CONSTRAINT "PK_MEMBER_ROMANTIC" PRIMARY KEY (
	"MEMBER_NO"
);

ALTER TABLE "MEMBER_ROMANTIC" ADD CONSTRAINT "FK_MEMBER_INFO_TO_MEMBER_ROMANTIC_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER_INFO" (
	"MEMBER_NO"
);

ALTER TABLE "MEMBER_ROMANTIC" ADD CONSTRAINT "FK_MEMBER_TO_MEMBER_ROMANTIC_1" FOREIGN KEY (
	"ROMANTIC_SOMEONE"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

------------------------------------------------------------------------------------

-- "MEMBER" 일반유저 데이터 삽입
INSERT INTO "MEMBER" 
VALUES(
   SEQ_MEMBER_NO.NEXTVAL,    -- 회원번호
   'peter9217@naver.com',       -- 이메일
   'pass01',             -- 비밀번호
   '로미',             -- 이름
   '01077777777',         -- 전화번호
   DEFAULT,             -- 계정상태(N:정상(기본), B:비활성, D:탈퇴)
   DEFAULT,             -- 회원등급(회원등급(M1~M9), 기본:M9)
   DEFAULT,             -- 가입일(기본:SYSDATE)
   NULL,                -- 비활성화일
   NULL,                -- 탈퇴일
   DEFAULT,             -- 친구요청(N:OFF, Y:ON(기본))
   DEFAULT,             -- 개인피드설정(N:OFF, Y:ON(기본))
   DEFAULT,             -- 친구요청알림(N:OFF, Y:ON(기본))
   DEFAULT,             -- 친구신청수락알림(N:OFF, Y:ON(기본))
   DEFAULT,             -- 태그알림(N:OFF, Y:ON(기본))
   DEFAULT,             -- 게시글댓글알림(N:OFF, Y:ON(기본))
   DEFAULT,             -- 게시글좋아요알림(N:OFF, Y:ON(기본))
   DEFAULT,             -- 게시글공유알림(N:OFF, Y:ON(기본))
   DEFAULT               -- 개인피드갱신알림(N:OFF, Y:ON(기본))
);

COMMIT;

SELECT * FROM "MEMBER" M LEFT JOIN "MEMBER_INFO" D ON (M.MEMBER_NO=D.MEMBER_NO) WHERE MEMBER_NAME ='박동욱';
UPDATE MEMBER_INFO SET INFO_PROFILE=NULL, INFO_PROFILEPATH=NULL WHERE (SELECT * FROM "MEMBER" M LEFT JOIN "MEMBER_INFO" D ON (M.MEMBER_NO=D.MEMBER_NO) WHERE MEMBER_NAME ='박동욱');
SELECT * FROM "MEMBER" M;
SELECT * FROM "MEMBER_INFO" M;

--------------------------------------------------------------
SELECT * FROM "MEMBER_INFO" ;
INSERT INTO "MEMBER_INFO"
VALUES(
	2,
	'dd',
	'dd',
	'남',
	NULL,
	NULL,
	'?',
	'?',
	'?',
	'?',
	'?',
	'?',
	'?',
	NULL,
	'?',
	'N',
	'?',
	'?',
	DEFAULT,
	DEFAULT
	);
);
SELECT * FROM "MEMBER" M LEFT JOIN "MEMBER_INFO" D ON (M.MEMBER_NO=D.MEMBER_NO);
UPDATE "MEMBER_INFO" SET  INFO_INTRO='됨?' WHERE MEMBER_NO=4;

-- 취미
DROP TABLE "MEMBER_HOBBY";

CREATE TABLE "MEMBER_HOBBY" (
	"HOBBY_NO"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"HOBBY"	VARCHAR2(100)		NOT NULL
);

COMMENT ON COLUMN "MEMBER_HOBBY"."HOBBY_NO" IS '취미번호(SEQ_HOBBY_NO)';

COMMENT ON COLUMN "MEMBER_HOBBY"."MEMBER_NO" IS '회원번호(SEQ_MEMBER_NO)';

COMMENT ON COLUMN "MEMBER_HOBBY"."HOBBY" IS '취미내용';

ALTER TABLE "MEMBER_HOBBY" ADD CONSTRAINT "PK_MEMBER_HOBBY" PRIMARY KEY (
	"HOBBY_NO"
);

ALTER TABLE "MEMBER_HOBBY" ADD CONSTRAINT "FK_MEMBER_INFO_TO_MEMBER_HOBBY_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER_INFO" (
	"MEMBER_NO"
);


--시퀀스
CREATE SEQUENCE SEQ_HOBBY_NO NOCACHE;
SELECT * FROM 'MEMBER' WHERE MEMBER_EMAIL ='peter9217@naver.com'; 
SELECT * FROM MEMBER WHERE MEMBER_ ='peter9217@naver.com'; 

SELECT * FROM "MEMBER";
SELECT * FROM "MEMBER_HOBBY";
SELECT  MEMBER_NO, DISTINCT(HOBBY) FROM MEMBER_HOBBY WHERE MEMBER_NO =2;
INSERT INTO "MEMBER_HOBBY" VALUES(SEQ_HOBBY_NO.NEXTVAL, 1, '보드게임');


INSERT INTO "MEMBER_HOBBY" VALUES(SEQ_HOBBY_NO.NEXTVAL, 4, '여행');

INSERT INTO "MEMBER_HOBBY" (MEMBER_NO)
VALUES (SEQ_MEMBER_NO.CURRVAL);


BEGIN
   FOR I IN 1..50 LOOP
	   INSERT INTO "MEMBER_HOBBY" 
		VALUES(SEQ_HOBBY_NO.NEXTVAL, 
				SEQ_HOBBY_NO.CURRVAL,
				'탁구');
   END LOOP;
END;


DELETE FROM "MEMBER_HOBBY" WHERE MEMBER_NO = 1 AND HOBBY= '멍';
SELECT * FROM "MEMBER_HOBBY" WHERE rownum<=3;

CREATE OR REPLACE FUNCTION GET_SEQ_HOBBY_NO
RETURN NUMBER IS num NUMBER;
BEGIN
	SELECT SEQ_HOBBY_NO.NEXTVAL
	  INTO num
	  FROM DUAL;
	
	RETURN num;
END;
INSERT INTO FRIEND VALUES(SEQ_FRIEND_NO.NEXTVAL, 2, 4, DEFAULT);
SELECT * FROM FRIEND;
DELETE FROM FRIEND WHERE FRIEND_SENDER=2 AND FRIEND_RECIVER=3;
COMMIT;
SELECT * FROM IMAGE i ;
GRANT EXECUTE ON DBMS_CRYPTO TO nndr;
SELECT * FROM IMAGE i ;
SELECT SET_AL_FRIEND_REQ FROM "MEMBER" m WHERE MEMBER_NO = 2  ;
SELECT * FROM BOARD;
SELECT * FROM MEMBER WHERE MEMBER_EMAIL ='peter9217@naver.com';
SELECT * FROM ALARM;
SELECT * FROM MEMBER_INFO;
SELECT * FROM FRIEND f ;
SELECT * FROM "MEMBER" M LEFT JOIN "MEMBER_INFO" D ON (M.MEMBER_NO=D.MEMBER_NO) WHERE M.MEMBER_NO= 5 AND (MEMBER_CODE = 'N');
INSERT INTO "MEMBER_HOBBY" VALUES(SEQ_HOBBY_NO.NEXTVAL, 1, '보드게임');INSERT INTO "MEMBER_HOBBY" VALUES(SEQ_HOBBY_NO.NEXTVAL, 2, '족구');


INSERT INTO
	WHEN (SELECT SET_AL_FRIEND_REQ FROM "MEMBER" m WHERE MEMBER_NO = 2)='Y' THEN 
		INTO  VALUES (SEQ_ALARM_NO.NEXTVAL, 'content', DEFAULT, DEFAULT, 2);
;


INSERT INTO "MEMBER" 
VALUES(
	SEQ_MEMBER_NO.NEXTVAL, 	-- 회원번호
	'pertest3@naver.com', 					-- 이메일
	'$2a$10$DOTDled.2j4/7uWiWgsxGOBFSaLXaHGFpQdbJqFKIl3XWl84sMevG', 			-- 비밀번호
	'남시온',	 					-- 이름
	'01012127589',						-- 전화번호
	DEFAULT, 				-- 계정상태(N:정상(기본), B:비활성, D:탈퇴)
	DEFAULT, 				-- 가입일(기본:SYSDATE)
	NULL, 					-- 비활성화일
	NULL, 					-- 탈퇴일
	DEFAULT, 				-- 친구요청(N:OFF, Y:ON(기본))
	DEFAULT, 				-- 개인피드설정(A:모두(기본), F:친구만, M:나만)
	DEFAULT, 				-- 친구요청알림(N:OFF, Y:ON(기본))
	DEFAULT, 				-- 친구신청수락알림(N:OFF, Y:ON(기본))
	DEFAULT, 				-- 태그알림(N:OFF, Y:ON(기본))
	DEFAULT, 				-- 게시글댓글알림(N:OFF, Y:ON(기본))
	DEFAULT, 				-- 게시글좋아요알림(N:OFF, Y:ON(기본))
	DEFAULT, 				-- 게시글공유알림(N:OFF, Y:ON(기본))
	DEFAULT					-- 개인피드갱신알림(N:OFF, Y:ON(기본))
);


INSERT INTO "MEMBER_INFO" (MEMBER_NO)
VALUES (SEQ_MEMBER_NO.CURRVAL);







SELECT ALARM_NO, ALARM_DATE FROM "ALARM" ORDER BY ALARM_NO DESC;
SELECT ALARM_NO FROM "ALARM" WHERE ROWNUM <= 1 ORDER BY ALARM_NO DESC;


UPDATE "ALARM" SET ALARM_FL='Y' WHERE ALARM_NO = 242;
UPDATE "MEMBER_INFO" SET INFO_BACK=NULL, INFO_BACKPATH=NULL WHERE MEMBER_NO = 2;
UPDATE "MEMBER_INFO" SET INFO_BACK=NULL, INFO_BACKPATH=NULL WHERE MEMBER_NO = 2;
SELECT BOARD_NO, IMG_PATH, IMG_RENAME, UPLOAD_DATE FROM "IMAGE" I LEFT JOIN "BOARD" USING(BOARD_NO) LEFT JOIN "MEMBER" M USING(MEMBER_NO) WHERE MEMBER_NO = 2 AND ROWNUM<=3;
UPDATE "MEMBER_INFO" SET INFO_PROFILE=#{imgRename}, INFO_PROFILEPATH=#{imgPath} WHERE MEMBER_NO = #{memberNo};
SELECT * FROM "MEMBER" M LEFT JOIN "MEMBER_INFO" D ON (M.MEMBER_NO=D.MEMBER_NO) WHERE M.MEMBER_NO= 6;

SELECT * FROM "MEMBER" M LEFT JOIN "MEMBER_INFO" D ON (M.MEMBER_NO=D.MEMBER_NO) WHERE M.MEMBER_NO= 6 AND (MEMBER_CODE = 'N' OR MEMBER_CODE = 'B' OR MEMBER_CODE = 'A')

cummit;